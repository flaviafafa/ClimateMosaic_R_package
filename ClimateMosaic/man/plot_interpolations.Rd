% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_interpolations.R
\name{plot_interpolations}
\alias{plot_interpolations}
\title{Plots the gridded interpolations on the contiguous US map.}
\usage{
plot_interpolations(
  interpolations,
  title,
  vibe = "neutral",
  breaks = NULL,
  labels = NULL,
  caption = NULL
)
}
\arguments{
\item{interpolations}{a dataframe of three columns: longitude and latitude of the
grid point (in decimal degrees) and interpolation at the point.}

\item{title}{main title for the resulting plot.}

\item{vibe}{(optional) color theme of the plot. Should be one of 'neutral', 'cold',
'hot', 'split_zero'. Default is 'neutral'. See Details.}

\item{breaks}{(optional) legend breaks for the plot. Should be specified along with
labels with the same length.}

\item{labels}{(optional) legend labels for the plot. Should be specified along with
breaks with the same length.}

\item{caption}{(optional) caption for the plot. Default is NULL.}
}
\description{
Plots the grid points, defined by longitudes and latitudes, and the interpolations
at the points in the contiguous US (i.e., excluding Alaska, Hawaii, Puerto Rico).
}
\details{
The vibe argument determines the color theme:
\itemize{
       \item \code{"neutral"} rainbow color palette
       \item \code{"cold"} cold color palette
       \item \code{"hot"} warm color palette
       \item \code{"split_zero"} white for values around zero, red for positive values,
                                         and blue for negative values.
}
}
\examples{
# generate grid
data("climate_df")
grid_points <- create_grid(0.7)
# get minimum temperature on 2023-12-31 by station
df <- climate_df[climate_df$lst_date == as.Date("2023-12-31"),
                            c("longitude", "latitude", "t_daily_min")]
# interpolate temperature to grid points
interpolations <- interpolate_data(df, grid_points)
# to see coldness around US
plot_interpolations(interpolations,
title = "Interpolated Min. Temperature on 2023-12-31", vibe = "cold")
# to see temperature above or below zero
plot_interpolations(interpolations,
title = "Interpolated Min. Temperature on 2023-12-31", vibe = "split_zero")

# get maximum temperature on 2023-07-31 by station
df <- climate_df[climate_df$lst_date == as.Date("2023-07-31"),
                            c("longitude", "latitude", "t_daily_max")]
# interpolate temperature to grid points
interpolations <- interpolate_data(df, grid_points)
plot_interpolations(interpolations,
title = "Interpolated Max. Temperature on 2023-07-31", vibe = "hot")

}
