% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolate_data.R
\name{interpolate_data}
\alias{interpolate_data}
\title{Interpolates data to the given grid.}
\usage{
interpolate_data(df, grid_points)
}
\arguments{
\item{df}{a dataframe containing training data. It has columns: longitudes and
latitudes of the stations in decimal degrees, respectively, other covariates if
any, observed values to be interpolated (must be the last column).}

\item{grid_points}{a dataframe containing the longitudes and latitudes in decimal
degrees (first two columns) and other covariates (if specified in df) of the grid
points to be interpolated to.}
}
\value{
a dataframe of three columns: longitude and latitude of the grid point, in
 decimal degrees, and interpolation at the point.
}
\description{
Interpolates climate data at the U.S. weather stations to the given grid points.
Latitudes and longitudes are the primary covariates and location variables. Other
covariates such as elevation can be provided. The package GpGp is used (see Details).
}
\details{
The functions fit_model and predictions from the package GpGp are used for
interpolating the data. For fit_model, "matern_sphere" is used as the argument
for covfun_name. See documentation:
\url{https://cran.r-project.org/web/packages/GpGp/GpGp.pdf}.
}
\examples{
# generate grid
grid_points <- create_grid(0.7)
# get minimum temperature on 2023-12-31 by station
df <- climate_df[climate_df$lst_date == as.Date("2023-12-31"), c("longitude",
                           "latitude", "t_daily_min")]
# interpolate temperature to grid points
interpolations <- interpolate_data(df, grid_points)
head(interpolations)
}
